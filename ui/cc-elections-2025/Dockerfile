FROM node:18 AS build

ARG VITE_BASE_URL
ENV VITE_BASE_URL=${VITE_BASE_URL}
ARG VITE_NETWORK_FLAG
ENV VITE_NETWORK_FLAG=${VITE_NETWORK_FLAG}
ARG VITE_IS_DEV
ENV VITE_IS_DEV=${VITE_IS_DEV}
ARG VITE_IPFS_GATEWAY
ENV VITE_IPFS_GATEWAY=${VITE_IPFS_GATEWAY}
ARG MINIFY
ENV MINIFY=${MINIFY}
ARG NODE_ENV
ENV NODE_ENV=${NODE_ENV}
ARG VITE_APPLY_END_DATE
ENV VITE_APPLY_END_DATE=${VITE_APPLY_END_DATE}
ARG VITE_EDIT_END_DATE
ENV VITE_EDIT_END_DATE=${VITE_EDIT_END_DATE}
ARG VITE_VOTE_END_DATE
ENV VITE_VOTE_END_DATE=${VITE_VOTE_END_DATE}
ARG VITE_VOTING_LEDGER_FOLLOWER_APP_URL
ENV VITE_VOTING_LEDGER_FOLLOWER_APP_URL=${VITE_VOTING_LEDGER_FOLLOWER_APP_URL}
ARG VITE_VOTING_APP_URL
ENV VITE_VOTING_APP_URL=${VITE_VOTING_APP_URL}
ARG VITE_ACCOUNT_INFO_URL
ENV VITE_ACCOUNT_INFO_URL=${VITE_ACCOUNT_INFO_URL}
ARG VITE_TARGET_NETWORK
ENV VITE_TARGET_NETWORK=${VITE_TARGET_NETWORK}
ARG VITE_PROPOSAL
ENV VITE_PROPOSAL=${VITE_PROPOSAL}
ARG VITE_CATEGORY
ENV VITE_CATEGORY=${VITE_CATEGORY}
ARG VITE_EVENT
ENV VITE_EVENT=${VITE_EVENT}

WORKDIR /app

COPY package.json . package-lock.json ./

RUN npm install --legacy-peer-deps --include=dev

COPY . .

RUN if [ "$MINIFY" = "false" ]; then \
      npx vite build --mode development --minify false; \
    else \
      npx vite build --mode production; \
    fi

FROM nginx:alpine AS production
WORKDIR /usr/share/nginx/html

ENV NODE_ENV=production

RUN rm -rf ./*

COPY --from=build /app/dist .

COPY default.conf /etc/nginx/conf.d/default.conf

CMD ["nginx", "-g", "daemon off;"]
